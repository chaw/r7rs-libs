=== Random Inexact Numbers: +(import (slib random-inexact))+

indexterm:[random-inexact]
A set of functions for generating random inexact numbers.
This library is built on top of SRFI 27.  All the functions take an optional last argument
to define the state.  The state is _implementation dependent_.

The functions all use the default random source, which you can randomise before use
using SRFI 27's:

[source,scheme]
----
> (random-source-randomize! default-random-source)
----

==== random:exp

indexterm2:[+random:exp+] returns an inexact real in an exponential distribution with mean 1.

[source,scheme]
----
sash[r7rs]> (random:exp)
0.34154536262153173
sash[r7rs]> (random:exp)
0.05480703829750473
sash[r7rs]> (random:exp)
3.949150883906155
----

==== random:hollow-sphere!

indexterm2:[+random:hollow-sphere!+] fills a given vector with numbers
generated by +random:normal+, but ensures the vector is on the n-dimensional
unit sphere, where n is the length of the given vector.

[source,scheme]
----
sash[r7rs]> (define v (vector 0 0 0))
#<unspecified>
sash[r7rs]> (random:hollow-sphere! v)
#t
sash[r7rs]> v
#(0.15379204615082398 0.8499736823380848 0.5038777092443952)
sash[r7rs]> (+ (square (vector-ref v 0)) (square (vector-ref v 1)) (square (vector-ref v 2)))
0.9999999999999999
----

==== random:normal

indexterm2:[+random:normal+] returns an inexact real in a normal distribution, mean 0 and 
standard deviation 1.

[source,scheme]
----
sash[r7rs]> (random:normal)
0.7092759009436378
sash[r7rs]> (random:normal)
1.0895040600796109
sash[r7rs]> (random:normal)
-0.03239748330944343
----

==== random:normal-vector!

indexterm2:[+random:normal-vector!+] fills a given vector with numbers generated by +random:normal+.

[source,scheme]
----
sash[r7rs]> (define v (vector 0 0 0))
#<unspecified>
sash[r7rs]> (random:normal-vector! v)
1.838805009717658
sash[r7rs]> v
#(-0.6720177712702253 -0.9211383829955655 0.7339626722027299)
----

==== random:solid-sphere!

indexterm2:[+random:solid-sphere!+] fills a given vector with numbers generated
by +random:normal+, but ensures the vector fits within the n-dimensional unit
sphere, where n is the length of the given vector.

[source,scheme]
----
sash[r7rs]> (define v (vector 0 0 0))
#<unspecified>
sash[r7rs]> (random:solid-sphere! v)
0.810489476742576
sash[r7rs]> v
#(-0.7899861662963674 -0.09111554959314132 -0.15656629775645328)
sash[r7rs]> (+ (square (vector-ref v 0)) (square (vector-ref v 1)) (square (vector-ref v 2)))
0.6568931919104545
----

==== random:uniform

indexterm2:[+random:uniform+] is the same as SRFI 27's indexterm2:[+random-real+], and returns 
a uniformly distributed inexact number in the range (0,1).

[source,scheme]
----
sash[r7rs]> (random:uniform)
0.7868209548678019
sash[r7rs]> (random:uniform)
0.2504803406880286
----


