== SRFI 64 Utilities: +(import (robin srfi64-utils))+

Some convenience functions for unit testing with SRFI 64.

=== test-all-equal

indexterm2:[+test-all-equal+] accepts two arguments: a function to test and an
association list of +( argument . result )+ pairs.  The function effectively
calls +(test-equal result (function argument))+ for all pairs.

[source,scheme]
----
(test-all-equal daitch-mokotoff-soundex '(("MANHEIM" . "665600")
                                          ("MINTZ" . "664000")
                                          ("TOPF" . "370000")
                                          ("AUERBACH" . "097500")))
----

=== test-approx-same

indexterm2:[+test-approx-same+] checks if two inexact numbers are within a given bound.  This is 
the same as +test-approximate+ except that the tolerance is optional, and defaults to 0.001.

[source,scheme]
----
#|kawa:32|# (test-approx-same 1 1.001)
#|kawa:33|# (test-approx-same 1 1.001 0.0001)
robin/srfi64-utils.sld:65: FAIL
----

=== test-compare

indexterm2:[+test-compare+] checks if two given items satisfy the given comparison procedure.

This is useful for testing equality of more complex data.  For example, we might want to check if 
just the first item of sublists are the same:

[source,scheme]
----
#|kawa:34|# (import (srfi 1))
#|kawa:41|# (define (equal-cars? i1 i2) (every (lambda (l1 l2) (equal? (car l1) (car l2))) i1 i2))
#|kawa:42|# (test-compare equal-cars? '((1 2) (3 4)) '((1 5) (3 6)))
#|kawa:43|# (test-compare equal-cars? '((1 2) (3 4)) '((1 5) (4 6)))
robin/srfi64-utils.sld:69: FAIL
----

=== test-no-error

indexterm2:[+test-no-error+] is used to confirm that a piece of code has _not_ thrown an error.
In the following example, the first line raises an +error+, and so the test fails.
The second line does not raise an +error+, and so the test passes.

[source,scheme]
----
#|kawa:27|# (test-no-error (if (zero? 0) (error "") #t))
robin/srfi64-utils.sld:55: FAIL
#|kawa:28|# (test-no-error (if (zero? 1) (error "") #t))
#|kawa:29|# 
----


